/**
 * Freshteam Public APIs
 * Freshteam public APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freshteam.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import ApplicantDetailCandidate from "./ApplicantDetailCandidate";
import ApplicantDetailFollowers from "./ApplicantDetailFollowers";
import NewHireCreateCustomFields from "./NewHireCreateCustomFields";

/**
 * The ApplicantDetail model module.
 * @module model/ApplicantDetail
 * @version 1.0.0
 */
class ApplicantDetail {
  /**
   * Constructs a new <code>ApplicantDetail</code>.
   * @alias module:model/ApplicantDetail
   */
  constructor() {
    ApplicantDetail.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>ApplicantDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicantDetail} obj Optional instance to populate.
   * @return {module:model/ApplicantDetail} The populated <code>ApplicantDetail</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ApplicantDetail();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "String");
      }
      if (data.hasOwnProperty("deleted")) {
        obj["deleted"] = ApiClient.convertToType(data["deleted"], "Boolean");
      }
      if (data.hasOwnProperty("stage")) {
        obj["stage"] = ApiClient.convertToType(data["stage"], "String");
      }
      if (data.hasOwnProperty("sub_stage_id")) {
        obj["sub_stage_id"] = ApiClient.convertToType(data["sub_stage_id"], "Number");
      }
      if (data.hasOwnProperty("on_hold_at")) {
        obj["on_hold_at"] = ApiClient.convertToType(data["on_hold_at"], "Date");
      }
      if (data.hasOwnProperty("on_hold_till")) {
        obj["on_hold_till"] = ApiClient.convertToType(data["on_hold_till"], "Date");
      }
      if (data.hasOwnProperty("rejected_at")) {
        obj["rejected_at"] = ApiClient.convertToType(data["rejected_at"], "Date");
      }
      if (data.hasOwnProperty("archived_at")) {
        obj["archived_at"] = ApiClient.convertToType(data["archived_at"], "Date");
      }
      if (data.hasOwnProperty("moved_at")) {
        obj["moved_at"] = ApiClient.convertToType(data["moved_at"], "Date");
      }
      if (data.hasOwnProperty("job_id")) {
        obj["job_id"] = ApiClient.convertToType(data["job_id"], "Number");
      }
      if (data.hasOwnProperty("job_title")) {
        obj["job_title"] = ApiClient.convertToType(data["job_title"], "String");
      }
      if (data.hasOwnProperty("requisition_id")) {
        obj["requisition_id"] = ApiClient.convertToType(data["requisition_id"], "Number");
      }
      if (data.hasOwnProperty("custom_fields")) {
        obj["custom_fields"] = NewHireCreateCustomFields.constructFromObject(data["custom_fields"]);
      }
      if (data.hasOwnProperty("candidate")) {
        obj["candidate"] = ApplicantDetailCandidate.constructFromObject(data["candidate"]);
      }
      if (data.hasOwnProperty("followers")) {
        obj["followers"] = ApiClient.convertToType(data["followers"], [ApplicantDetailFollowers]);
      }
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
ApplicantDetail.prototype["id"] = undefined;

/**
 * @member {Date} created_at
 */
ApplicantDetail.prototype["created_at"] = undefined;

/**
 * @member {Date} updated_at
 */
ApplicantDetail.prototype["updated_at"] = undefined;

/**
 * @member {module:model/ApplicantDetail.StatusEnum} status
 */
ApplicantDetail.prototype["status"] = undefined;

/**
 * @member {Boolean} deleted
 */
ApplicantDetail.prototype["deleted"] = undefined;

/**
 * @member {module:model/ApplicantDetail.StageEnum} stage
 */
ApplicantDetail.prototype["stage"] = undefined;

/**
 * @member {Number} sub_stage_id
 */
ApplicantDetail.prototype["sub_stage_id"] = undefined;

/**
 * @member {Date} on_hold_at
 */
ApplicantDetail.prototype["on_hold_at"] = undefined;

/**
 * @member {Date} on_hold_till
 */
ApplicantDetail.prototype["on_hold_till"] = undefined;

/**
 * @member {Date} rejected_at
 */
ApplicantDetail.prototype["rejected_at"] = undefined;

/**
 * @member {Date} archived_at
 */
ApplicantDetail.prototype["archived_at"] = undefined;

/**
 * @member {Date} moved_at
 */
ApplicantDetail.prototype["moved_at"] = undefined;

/**
 * @member {Number} job_id
 */
ApplicantDetail.prototype["job_id"] = undefined;

/**
 * @member {String} job_title
 */
ApplicantDetail.prototype["job_title"] = undefined;

/**
 * @member {Number} requisition_id
 */
ApplicantDetail.prototype["requisition_id"] = undefined;

/**
 * @member {module:model/NewHireCreateCustomFields} custom_fields
 */
ApplicantDetail.prototype["custom_fields"] = undefined;

/**
 * @member {module:model/ApplicantDetailCandidate} candidate
 */
ApplicantDetail.prototype["candidate"] = undefined;

/**
 * @member {Array.<module:model/ApplicantDetailFollowers>} followers
 */
ApplicantDetail.prototype["followers"] = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ApplicantDetail["StatusEnum"] = {
  /**
   * value: "open"
   * @const
   */
  open: "open",

  /**
   * value: "on_hold"
   * @const
   */
  on_hold: "on_hold",

  /**
   * value: "rejected"
   * @const
   */
  rejected: "rejected",

  /**
   * value: "archived"
   * @const
   */
  archived: "archived",

  /**
   * value: "moved"
   * @const
   */
  moved: "moved",

  /**
   * value: "dropped"
   * @const
   */
  dropped: "dropped"
};

/**
 * Allowed values for the <code>stage</code> property.
 * @enum {String}
 * @readonly
 */
ApplicantDetail["StageEnum"] = {
  /**
   * value: "candidature"
   * @const
   */
  candidature: "candidature",

  /**
   * value: "screening"
   * @const
   */
  screening: "screening",

  /**
   * value: "on_site"
   * @const
   */
  on_site: "on_site",

  /**
   * value: "offer"
   * @const
   */
  offer: "offer",

  /**
   * value: "hire"
   * @const
   */
  hire: "hire"
};

export default ApplicantDetail;
