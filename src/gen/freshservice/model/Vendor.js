/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The Vendor model module.
 * @module model/Vendor
 * @version 1.0.0
 */
class Vendor {
  /**
   * Constructs a new <code>Vendor</code>.
   * @alias module:model/Vendor
   */
  constructor() {
    Vendor.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Vendor</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Vendor} obj Optional instance to populate.
   * @return {module:model/Vendor} The populated <code>Vendor</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Vendor();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(data["description"], "String");
      }
      if (data.hasOwnProperty("primary_contact_id")) {
        obj["primary_contact_id"] = ApiClient.convertToType(data["primary_contact_id"], "Number");
      }
      if (data.hasOwnProperty("address_line1")) {
        obj["address_line1"] = ApiClient.convertToType(data["address_line1"], "String");
      }
      if (data.hasOwnProperty("address_line2")) {
        obj["address_line2"] = ApiClient.convertToType(data["address_line2"], "String");
      }
      if (data.hasOwnProperty("address_city")) {
        obj["address_city"] = ApiClient.convertToType(data["address_city"], "String");
      }
      if (data.hasOwnProperty("address_state")) {
        obj["address_state"] = ApiClient.convertToType(data["address_state"], "String");
      }
      if (data.hasOwnProperty("address_country")) {
        obj["address_country"] = ApiClient.convertToType(data["address_country"], "String");
      }
      if (data.hasOwnProperty("address_zipcode")) {
        obj["address_zipcode"] = ApiClient.convertToType(data["address_zipcode"], "String");
      }
    }
    return obj;
  }
}

/**
 * Unique ID of the vendor
 * @member {Number} id
 */
Vendor.prototype["id"] = undefined;

/**
 * Name of the vendor
 * @member {String} name
 */
Vendor.prototype["name"] = undefined;

/**
 * Description of the vendor
 * @member {String} description
 */
Vendor.prototype["description"] = undefined;

/**
 * Unique ID of the primary contact (Primary contact is a requester. The primary contact name, email phone and mobile number will be referenced from the requester details)
 * @member {Number} primary_contact_id
 */
Vendor.prototype["primary_contact_id"] = undefined;

/**
 * Address Line 1
 * @member {String} address_line1
 */
Vendor.prototype["address_line1"] = undefined;

/**
 * Address Line 2
 * @member {String} address_line2
 */
Vendor.prototype["address_line2"] = undefined;

/**
 * City
 * @member {String} address_city
 */
Vendor.prototype["address_city"] = undefined;

/**
 * State
 * @member {String} address_state
 */
Vendor.prototype["address_state"] = undefined;

/**
 * Country
 * @member {String} address_country
 */
Vendor.prototype["address_country"] = undefined;

/**
 * Zip Code of the location
 * @member {String} address_zipcode
 */
Vendor.prototype["address_zipcode"] = undefined;

export default Vendor;
