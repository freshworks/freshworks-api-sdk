/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The ServiceItemField model module.
 * @module model/ServiceItemField
 * @version 2.0.1
 */
class ServiceItemField {
  /**
   * Constructs a new <code>ServiceItemField</code>.
   * @alias module:model/ServiceItemField
   */
  constructor() {
    ServiceItemField.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>ServiceItemField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ServiceItemField} obj Optional instance to populate.
   * @return {module:model/ServiceItemField} The populated <code>ServiceItemField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ServiceItemField();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("service_item_id")) {
        obj["service_item_id"] = ApiClient.convertToType(data["service_item_id"], "Number");
      }
      if (data.hasOwnProperty("field_type")) {
        obj["field_type"] = ApiClient.convertToType(data["field_type"], "String");
      }
      if (data.hasOwnProperty("position")) {
        obj["position"] = ApiClient.convertToType(data["position"], "Number");
      }
      if (data.hasOwnProperty("required")) {
        obj["required"] = ApiClient.convertToType(data["required"], "Boolean");
      }
      if (data.hasOwnProperty("visible_in_the_portal")) {
        obj["visible_in_the_portal"] = ApiClient.convertToType(data["visible_in_the_portal"], "Boolean");
      }
      if (data.hasOwnProperty("field_choices")) {
        obj["field_choices"] = ApiClient.convertToType(data["field_choices"], Object);
      }
    }
    return obj;
  }
}

/**
 * ID of the field
 * @member {Number} id
 */
ServiceItemField.prototype["id"] = undefined;

/**
 * blaml
 * @member {String} name
 */
ServiceItemField.prototype["name"] = undefined;

/**
 * Label of the field that requesters will see
 * @member {String} label
 */
ServiceItemField.prototype["label"] = undefined;

/**
 * ID of the item
 * @member {Number} service_item_id
 */
ServiceItemField.prototype["service_item_id"] = undefined;

/**
 * Type of field
 * @member {String} field_type
 */
ServiceItemField.prototype["field_type"] = undefined;

/**
 * Position of the field in the form
 * @member {Number} position
 */
ServiceItemField.prototype["position"] = undefined;

/**
 * Set to true if this field is madatory for requesters to fill
 * @member {Boolean} required
 */
ServiceItemField.prototype["required"] = undefined;

/**
 * Set to true if this field is visible to requesters
 * @member {Boolean} visible_in_the_portal
 */
ServiceItemField.prototype["visible_in_the_portal"] = undefined;

/**
 * Options available for selection for the field (available only for dropdown and nested fields)
 * @member {Object} field_choices
 */
ServiceItemField.prototype["field_choices"] = undefined;

export default ServiceItemField;
