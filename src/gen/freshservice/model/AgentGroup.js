/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The AgentGroup model module.
 * @module model/AgentGroup
 * @version 2.0.1
 */
class AgentGroup {
  /**
   * Constructs a new <code>AgentGroup</code>.
   * @alias module:model/AgentGroup
   */
  constructor() {
    AgentGroup.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>AgentGroup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AgentGroup} obj Optional instance to populate.
   * @return {module:model/AgentGroup} The populated <code>AgentGroup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AgentGroup();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(data["description"], "String");
      }
      if (data.hasOwnProperty("business_hours_id")) {
        obj["business_hours_id"] = ApiClient.convertToType(data["business_hours_id"], "Number");
      }
      if (data.hasOwnProperty("escalate_to")) {
        obj["escalate_to"] = ApiClient.convertToType(data["escalate_to"], "Number");
      }
      if (data.hasOwnProperty("agent_ids")) {
        obj["agent_ids"] = ApiClient.convertToType(data["agent_ids"], ["String"]);
      }
      if (data.hasOwnProperty("members")) {
        obj["members"] = ApiClient.convertToType(data["members"], ["String"]);
      }
      if (data.hasOwnProperty("observers")) {
        obj["observers"] = ApiClient.convertToType(data["observers"], ["String"]);
      }
      if (data.hasOwnProperty("group_leaders")) {
        obj["group_leaders"] = ApiClient.convertToType(data["group_leaders"], ["String"]);
      }
      if (data.hasOwnProperty("auto_ticket_assign")) {
        obj["auto_ticket_assign"] = ApiClient.convertToType(data["auto_ticket_assign"], "Boolean");
      }
      if (data.hasOwnProperty("restricted")) {
        obj["restricted"] = ApiClient.convertToType(data["restricted"], "Boolean");
      }
      if (data.hasOwnProperty("approval_required")) {
        obj["approval_required"] = ApiClient.convertToType(data["approval_required"], "Boolean");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the agent group
 * @member {Number} id
 */
AgentGroup.prototype["id"] = undefined;

/**
 * Name of the agent group
 * @member {String} name
 */
AgentGroup.prototype["name"] = undefined;

/**
 * Description about the agent group
 * @member {String} description
 */
AgentGroup.prototype["description"] = undefined;

/**
 * Unique ID of the business hours configuration associated with the group
 * @member {Number} business_hours_id
 */
AgentGroup.prototype["business_hours_id"] = undefined;

/**
 * The Unique ID of the user to whom an escalation email is sent if a ticket in this group is unassigned. To create/update a group with an escalate_to value of ‘none’, please set the value of this parameter to ‘null’.
 * @member {Number} escalate_to
 */
AgentGroup.prototype["escalate_to"] = undefined;

/**
 * <DEPRECATED> Array of user IDs of agents who belong to the group.
 * @member {Array.<String>} agent_ids
 */
AgentGroup.prototype["agent_ids"] = undefined;

/**
 * Array of user IDs of agents who are members of the group.
 * @member {Array.<String>} members
 */
AgentGroup.prototype["members"] = undefined;

/**
 * Array of user IDs of agents who are observers of the group.
 * @member {Array.<String>} observers
 */
AgentGroup.prototype["observers"] = undefined;

/**
 * Array of user IDs of agents who are leaders of the group.
 * @member {Array.<String>} group_leaders
 */
AgentGroup.prototype["group_leaders"] = undefined;

/**
 * Describes the automatic ticket assignment type. Will not be supported if the \"Round Robin\" feature is disabled for the account. Set to true if automatic ticket assignment is enabled, and false otherwise.
 * @member {Boolean} auto_ticket_assign
 */
AgentGroup.prototype["auto_ticket_assign"] = undefined;

/**
 * Signifies whether the group is a resricted group
 * @member {Boolean} restricted
 */
AgentGroup.prototype["restricted"] = undefined;

/**
 * Signifies whether approval is required from group leaders to add agents to the group, delete the group, disable restricted mode on the group, or disable approvals.
 * @member {Boolean} approval_required
 */
AgentGroup.prototype["approval_required"] = undefined;

/**
 * Timestamp at which the agent group was created
 * @member {Date} created_at
 */
AgentGroup.prototype["created_at"] = undefined;

/**
 * Timestamp at which the agent group was last modified
 * @member {Date} updated_at
 */
AgentGroup.prototype["updated_at"] = undefined;

export default AgentGroup;
