/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Asset from "./Asset";
import PlanningFields from "./PlanningFields";

/**
 * The Release model module.
 * @module model/Release
 * @version 2.0.1
 */
class Release {
  /**
   * Constructs a new <code>Release</code>.
   * @alias module:model/Release
   */
  constructor() {
    Release.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Release</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Release} obj Optional instance to populate.
   * @return {module:model/Release} The populated <code>Release</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Release();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("agent_id")) {
        obj["agent_id"] = ApiClient.convertToType(data["agent_id"], "Number");
      }
      if (data.hasOwnProperty("group_id")) {
        obj["group_id"] = ApiClient.convertToType(data["group_id"], "Number");
      }
      if (data.hasOwnProperty("priority")) {
        obj["priority"] = ApiClient.convertToType(data["priority"], "Number");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "Number");
      }
      if (data.hasOwnProperty("release_type")) {
        obj["release_type"] = ApiClient.convertToType(data["release_type"], "Number");
      }
      if (data.hasOwnProperty("subject")) {
        obj["subject"] = ApiClient.convertToType(data["subject"], "String");
      }
      if (data.hasOwnProperty("planned_start_date")) {
        obj["planned_start_date"] = ApiClient.convertToType(data["planned_start_date"], "Date");
      }
      if (data.hasOwnProperty("planned_end_date")) {
        obj["planned_end_date"] = ApiClient.convertToType(data["planned_end_date"], "Date");
      }
      if (data.hasOwnProperty("work_start_date")) {
        obj["work_start_date"] = ApiClient.convertToType(data["work_start_date"], "Date");
      }
      if (data.hasOwnProperty("work_end_date")) {
        obj["work_end_date"] = ApiClient.convertToType(data["work_end_date"], "Date");
      }
      if (data.hasOwnProperty("department_id")) {
        obj["department_id"] = ApiClient.convertToType(data["department_id"], "Number");
      }
      if (data.hasOwnProperty("category")) {
        obj["category"] = ApiClient.convertToType(data["category"], "String");
      }
      if (data.hasOwnProperty("sub_category")) {
        obj["sub_category"] = ApiClient.convertToType(data["sub_category"], "String");
      }
      if (data.hasOwnProperty("item_category")) {
        obj["item_category"] = ApiClient.convertToType(data["item_category"], "String");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("associated_assets")) {
        obj["associated_assets"] = ApiClient.convertToType(data["associated_assets"], ["Number"]);
      }
      if (data.hasOwnProperty("assets")) {
        obj["assets"] = ApiClient.convertToType(data["assets"], [Asset]);
      }
      if (data.hasOwnProperty("associated_changes")) {
        obj["associated_changes"] = ApiClient.convertToType(data["associated_changes"], ["Number"]);
      }
      if (data.hasOwnProperty("custom_fields")) {
        obj["custom_fields"] = ApiClient.convertToType(data["custom_fields"], { String: "String" });
      }
      if (data.hasOwnProperty("planning_fields")) {
        obj["planning_fields"] = PlanningFields.constructFromObject(data["planning_fields"]);
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the Release
 * @member {Number} id
 */
Release.prototype["id"] = undefined;

/**
 * Unique identifier of the agent to whom the Release is assigned
 * @member {Number} agent_id
 */
Release.prototype["agent_id"] = undefined;

/**
 * Unique identifier of the agent group to which the Release is assigned
 * @member {Number} group_id
 */
Release.prototype["group_id"] = undefined;

/**
 * Priority of the Release 1-Low, 2-Medium, 3-High, 4-Urgent
 * @member {Number} priority
 */
Release.prototype["priority"] = undefined;

/**
 * Status identifier of the Release. Open -> 1, On hold -> 2, In Progress -> 3, Incomplete -> 4, Completed -> 5
 * @member {Number} status
 */
Release.prototype["status"] = undefined;

/**
 * Type of the Release 1-minor, 2-standard, 3-major, 4-emergency
 * @member {Number} release_type
 */
Release.prototype["release_type"] = undefined;

/**
 * Subject of the Release
 * @member {String} subject
 */
Release.prototype["subject"] = undefined;

/**
 * Timestamp at which release is starting
 * @member {Date} planned_start_date
 */
Release.prototype["planned_start_date"] = undefined;

/**
 * Timestamp at which release is ending
 * @member {Date} planned_end_date
 */
Release.prototype["planned_end_date"] = undefined;

/**
 * Timestamp at which release work started
 * @member {Date} work_start_date
 */
Release.prototype["work_start_date"] = undefined;

/**
 * Timestamp at which release work ended
 * @member {Date} work_end_date
 */
Release.prototype["work_end_date"] = undefined;

/**
 * Unique ID of the department initiating the Release
 * @member {Number} department_id
 */
Release.prototype["department_id"] = undefined;

/**
 * Category of the Release
 * @member {String} category
 */
Release.prototype["category"] = undefined;

/**
 * Sub-category of the Release
 * @member {String} sub_category
 */
Release.prototype["sub_category"] = undefined;

/**
 * Item of the Release
 * @member {String} item_category
 */
Release.prototype["item_category"] = undefined;

/**
 * Timestamp at which Release was created
 * @member {Date} created_at
 */
Release.prototype["created_at"] = undefined;

/**
 * Timestamp at which Release was last updated
 * @member {Date} updated_at
 */
Release.prototype["updated_at"] = undefined;

/**
 * Unique IDs of the assets associated with the Release request
 * @member {Array.<Number>} associated_assets
 */
Release.prototype["associated_assets"] = undefined;

/**
 * Assets associated with the Ticket
 * @member {Array.<module:model/Asset>} assets
 */
Release.prototype["assets"] = undefined;

/**
 * Unique IDs of the Changes associated with the Release
 * @member {Array.<Number>} associated_changes
 */
Release.prototype["associated_changes"] = undefined;

/**
 * Key value pairs containing the names and values of custom fields
 * @member {Object.<String, String>} custom_fields
 */
Release.prototype["custom_fields"] = undefined;

/**
 * @member {module:model/PlanningFields} planning_fields
 */
Release.prototype["planning_fields"] = undefined;

export default Release;
