/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The SolutionFolderVisibility model module.
 * @module model/SolutionFolderVisibility
 * @version 2.0.1
 */
class SolutionFolderVisibility {
  /**
   * Constructs a new <code>SolutionFolderVisibility</code>.
   * Users who can view this folder
   * @alias module:model/SolutionFolderVisibility
   */
  constructor() {
    SolutionFolderVisibility.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>SolutionFolderVisibility</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SolutionFolderVisibility} obj Optional instance to populate.
   * @return {module:model/SolutionFolderVisibility} The populated <code>SolutionFolderVisibility</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SolutionFolderVisibility();

      if (data.hasOwnProperty("requester_groups")) {
        obj["requester_groups"] = ApiClient.convertToType(data["requester_groups"], ["Number"]);
      }
      if (data.hasOwnProperty("agent_groups")) {
        obj["agent_groups"] = ApiClient.convertToType(data["agent_groups"], ["Number"]);
      }
      if (data.hasOwnProperty("departments")) {
        obj["departments"] = ApiClient.convertToType(data["departments"], ["Number"]);
      }
      if (data.hasOwnProperty("all_agents")) {
        obj["all_agents"] = ApiClient.convertToType(data["all_agents"], "Boolean");
      }
      if (data.hasOwnProperty("everyone")) {
        obj["everyone"] = ApiClient.convertToType(data["everyone"], "Boolean");
      }
      if (data.hasOwnProperty("logged_in_users")) {
        obj["logged_in_users"] = ApiClient.convertToType(data["logged_in_users"], "Boolean");
      }
    }
    return obj;
  }
}

/**
 * Requester group IDs that have access to view this folder
 * @member {Array.<Number>} requester_groups
 */
SolutionFolderVisibility.prototype["requester_groups"] = undefined;

/**
 * Agent group IDs that have access to view this folder
 * @member {Array.<Number>} agent_groups
 */
SolutionFolderVisibility.prototype["agent_groups"] = undefined;

/**
 * The department IDs whose members will be able to view the folder
 * @member {Array.<Number>} departments
 */
SolutionFolderVisibility.prototype["departments"] = undefined;

/**
 * Is True if all agents can view this folder
 * @member {Boolean} all_agents
 */
SolutionFolderVisibility.prototype["all_agents"] = undefined;

/**
 * Is True if all users can view this folder
 * @member {Boolean} everyone
 */
SolutionFolderVisibility.prototype["everyone"] = undefined;

/**
 * Is True if all logged in users can view this folder
 * @member {Boolean} logged_in_users
 */
SolutionFolderVisibility.prototype["logged_in_users"] = undefined;

export default SolutionFolderVisibility;
