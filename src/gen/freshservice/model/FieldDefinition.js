/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The FieldDefinition model module.
 * @module model/FieldDefinition
 * @version 2.0.1
 */
class FieldDefinition {
  /**
   * Constructs a new <code>FieldDefinition</code>.
   * @alias module:model/FieldDefinition
   */
  constructor() {
    FieldDefinition.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>FieldDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FieldDefinition} obj Optional instance to populate.
   * @return {module:model/FieldDefinition} The populated <code>FieldDefinition</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FieldDefinition();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("field_type")) {
        obj["field_type"] = ApiClient.convertToType(data["field_type"], "String");
      }
      if (data.hasOwnProperty("mandatory")) {
        obj["mandatory"] = ApiClient.convertToType(data["mandatory"], "Boolean");
      }
      if (data.hasOwnProperty("is_default_field")) {
        obj["is_default_field"] = ApiClient.convertToType(data["is_default_field"], "Boolean");
      }
      if (data.hasOwnProperty("created_time")) {
        obj["created_time"] = ApiClient.convertToType(data["created_time"], "Date");
      }
      if (data.hasOwnProperty("updated_time")) {
        obj["updated_time"] = ApiClient.convertToType(data["updated_time"], "Date");
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the field
 * @member {Number} id
 */
FieldDefinition.prototype["id"] = undefined;

/**
 * Name of the field
 * @member {String} name
 */
FieldDefinition.prototype["name"] = undefined;

/**
 * Label of the field as displayed on the user interface
 * @member {String} label
 */
FieldDefinition.prototype["label"] = undefined;

/**
 * The data type of the value that can be stored in the field
 * @member {String} field_type
 */
FieldDefinition.prototype["field_type"] = undefined;

/**
 * Mandatoriness of this field when an agent is creating or updating the corresponding entity
 * @member {Boolean} mandatory
 */
FieldDefinition.prototype["mandatory"] = undefined;

/**
 * Signifies if this field is a default field that is always applicable for the entity in Freshservice
 * @member {Boolean} is_default_field
 */
FieldDefinition.prototype["is_default_field"] = undefined;

/**
 * Timestamp at which the field was created
 * @member {Date} created_time
 */
FieldDefinition.prototype["created_time"] = undefined;

/**
 * Timestamp at which the field was last modified
 * @member {Date} updated_time
 */
FieldDefinition.prototype["updated_time"] = undefined;

export default FieldDefinition;
