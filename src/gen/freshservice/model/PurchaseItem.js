/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The PurchaseItem model module.
 * @module model/PurchaseItem
 * @version 1.0.0
 */
class PurchaseItem {
  /**
   * Constructs a new <code>PurchaseItem</code>.
   * @alias module:model/PurchaseItem
   */
  constructor() {
    PurchaseItem.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>PurchaseItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PurchaseItem} obj Optional instance to populate.
   * @return {module:model/PurchaseItem} The populated <code>PurchaseItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PurchaseItem();

      if (data.hasOwnProperty("item_type")) {
        obj["item_type"] = ApiClient.convertToType(data["item_type"], "Number");
      }
      if (data.hasOwnProperty("item_name")) {
        obj["item_name"] = ApiClient.convertToType(data["item_name"], "String");
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(data["description"], "String");
      }
      if (data.hasOwnProperty("cost")) {
        obj["cost"] = ApiClient.convertToType(data["cost"], "Number");
      }
      if (data.hasOwnProperty("quantity")) {
        obj["quantity"] = ApiClient.convertToType(data["quantity"], "Number");
      }
      if (data.hasOwnProperty("tax_percentage")) {
        obj["tax_percentage"] = ApiClient.convertToType(data["tax_percentage"], "Number");
      }
    }
    return obj;
  }
}

/**
 * Type of item to be ordered
 * @member {module:model/PurchaseItem.ItemTypeEnum} item_type
 */
PurchaseItem.prototype["item_type"] = undefined;

/**
 * Name of the items to be ordered
 * @member {String} item_name
 */
PurchaseItem.prototype["item_name"] = undefined;

/**
 * Item description
 * @member {String} description
 */
PurchaseItem.prototype["description"] = undefined;

/**
 * Cost of the item
 * @member {Number} cost
 */
PurchaseItem.prototype["cost"] = undefined;

/**
 * Quantity of item to be ordered
 * @member {Number} quantity
 */
PurchaseItem.prototype["quantity"] = undefined;

/**
 * Percentage of tax on item cost
 * @member {Number} tax_percentage
 */
PurchaseItem.prototype["tax_percentage"] = undefined;

/**
 * Allowed values for the <code>item_type</code> property.
 * @enum {Number}
 * @readonly
 */
PurchaseItem["ItemTypeEnum"] = {
  /**
   * value: 1
   * @const
   */
  1: 1,

  /**
   * value: 2
   * @const
   */
  2: 2,

  /**
   * value: 3
   * @const
   */
  3: 3
};

export default PurchaseItem;
