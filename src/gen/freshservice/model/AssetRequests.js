/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The AssetRequests model module.
 * @module model/AssetRequests
 * @version 1.0.0
 */
class AssetRequests {
  /**
   * Constructs a new <code>AssetRequests</code>.
   * @alias module:model/AssetRequests
   */
  constructor() {
    AssetRequests.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>AssetRequests</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AssetRequests} obj Optional instance to populate.
   * @return {module:model/AssetRequests} The populated <code>AssetRequests</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AssetRequests();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("request_type")) {
        obj["request_type"] = ApiClient.convertToType(data["request_type"], "String");
      }
      if (data.hasOwnProperty("request_id")) {
        obj["request_id"] = ApiClient.convertToType(data["request_id"], "Number");
      }
      if (data.hasOwnProperty("request_details")) {
        obj["request_details"] = ApiClient.convertToType(data["request_details"], "String");
      }
      if (data.hasOwnProperty("request_status")) {
        obj["request_status"] = ApiClient.convertToType(data["request_status"], "String");
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the association
 * @member {Number} id
 */
AssetRequests.prototype["id"] = undefined;

/**
 * type of the association (ticket, problem, change, release or project)
 * @member {String} request_type
 */
AssetRequests.prototype["request_type"] = undefined;

/**
 * ID of associated request (ticket, problem, change, release or project ID)
 * @member {Number} request_id
 */
AssetRequests.prototype["request_id"] = undefined;

/**
 * name/subject of the request
 * @member {String} request_details
 */
AssetRequests.prototype["request_details"] = undefined;

/**
 * status of the request
 * @member {String} request_status
 */
AssetRequests.prototype["request_status"] = undefined;

export default AssetRequests;
