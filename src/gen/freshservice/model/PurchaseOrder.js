/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The PurchaseOrder model module.
 * @module model/PurchaseOrder
 * @version 1.0.0
 */
class PurchaseOrder {
  /**
   * Constructs a new <code>PurchaseOrder</code>.
   * @alias module:model/PurchaseOrder
   */
  constructor() {
    PurchaseOrder.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>PurchaseOrder</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PurchaseOrder} obj Optional instance to populate.
   * @return {module:model/PurchaseOrder} The populated <code>PurchaseOrder</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PurchaseOrder();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("vendor_id")) {
        obj["vendor_id"] = ApiClient.convertToType(data["vendor_id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("po_number")) {
        obj["po_number"] = ApiClient.convertToType(data["po_number"], "String");
      }
      if (data.hasOwnProperty("vendor_details")) {
        obj["vendor_details"] = ApiClient.convertToType(data["vendor_details"], "String");
      }
      if (data.hasOwnProperty("expected_delivery_date")) {
        obj["expected_delivery_date"] = ApiClient.convertToType(data["expected_delivery_date"], "Date");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("created_by")) {
        obj["created_by"] = ApiClient.convertToType(data["created_by"], "Number");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "Number");
      }
      if (data.hasOwnProperty("shipping_address")) {
        obj["shipping_address"] = ApiClient.convertToType(data["shipping_address"], "String");
      }
      if (data.hasOwnProperty("billing_same_as_shipping")) {
        obj["billing_same_as_shipping"] = ApiClient.convertToType(data["billing_same_as_shipping"], "Boolean");
      }
      if (data.hasOwnProperty("billing_address")) {
        obj["billing_address"] = ApiClient.convertToType(data["billing_address"], "String");
      }
      if (data.hasOwnProperty("currency_code")) {
        obj["currency_code"] = ApiClient.convertToType(data["currency_code"], "String");
      }
      if (data.hasOwnProperty("conversion_rate")) {
        obj["conversion_rate"] = ApiClient.convertToType(data["conversion_rate"], "Number");
      }
      if (data.hasOwnProperty("department_id")) {
        obj["department_id"] = ApiClient.convertToType(data["department_id"], "Number");
      }
      if (data.hasOwnProperty("discount_percentage")) {
        obj["discount_percentage"] = ApiClient.convertToType(data["discount_percentage"], "Number");
      }
      if (data.hasOwnProperty("tax_percentage")) {
        obj["tax_percentage"] = ApiClient.convertToType(data["tax_percentage"], "Number");
      }
      if (data.hasOwnProperty("shipping_cost")) {
        obj["shipping_cost"] = ApiClient.convertToType(data["shipping_cost"], "Number");
      }
      if (data.hasOwnProperty("custom_fields")) {
        obj["custom_fields"] = ApiClient.convertToType(data["custom_fields"], Object);
      }
    }
    return obj;
  }
}

/**
 * ID of the purchase order
 * @member {Number} id
 */
PurchaseOrder.prototype["id"] = undefined;

/**
 * ID of the vendor with whom the order is placed
 * @member {Number} vendor_id
 */
PurchaseOrder.prototype["vendor_id"] = undefined;

/**
 * Title of the purchase order
 * @member {String} name
 */
PurchaseOrder.prototype["name"] = undefined;

/**
 * Purchase order number
 * @member {String} po_number
 */
PurchaseOrder.prototype["po_number"] = undefined;

/**
 * Details of the vendor with whom the order is placed
 * @member {String} vendor_details
 */
PurchaseOrder.prototype["vendor_details"] = undefined;

/**
 * Expected delivery date of the purchase order
 * @member {Date} expected_delivery_date
 */
PurchaseOrder.prototype["expected_delivery_date"] = undefined;

/**
 * Created date and time of the purchase order
 * @member {Date} created_at
 */
PurchaseOrder.prototype["created_at"] = undefined;

/**
 * Updated date and time of the purchase order
 * @member {Date} updated_at
 */
PurchaseOrder.prototype["updated_at"] = undefined;

/**
 * ID of the agent who created purchase order
 * @member {Number} created_by
 */
PurchaseOrder.prototype["created_by"] = undefined;

/**
 * Status of the purchase order
 * @member {Number} status
 */
PurchaseOrder.prototype["status"] = undefined;

/**
 * Address to which the order should be shipped
 * @member {String} shipping_address
 */
PurchaseOrder.prototype["shipping_address"] = undefined;

/**
 * True if Billing address is same as Shipping address
 * @member {Boolean} billing_same_as_shipping
 */
PurchaseOrder.prototype["billing_same_as_shipping"] = undefined;

/**
 * Address to which the order should be billed
 * @member {String} billing_address
 */
PurchaseOrder.prototype["billing_address"] = undefined;

/**
 * Currency unit used in the transaction
 * @member {module:model/PurchaseOrder.CurrencyCodeEnum} currency_code
 */
PurchaseOrder.prototype["currency_code"] = undefined;

/**
 * Conversion rate to convert selected currency unit to helpdesk currency
 * @member {Number} conversion_rate
 */
PurchaseOrder.prototype["conversion_rate"] = undefined;

/**
 * Unique ID of the department
 * @member {Number} department_id
 */
PurchaseOrder.prototype["department_id"] = undefined;

/**
 * Percentage of discount on the order
 * @member {Number} discount_percentage
 */
PurchaseOrder.prototype["discount_percentage"] = undefined;

/**
 * Percentage of tax on the order
 * @member {Number} tax_percentage
 */
PurchaseOrder.prototype["tax_percentage"] = undefined;

/**
 * Total cost of shipping the order
 * @member {Number} shipping_cost
 */
PurchaseOrder.prototype["shipping_cost"] = undefined;

/**
 * @member {Object} custom_fields
 */
PurchaseOrder.prototype["custom_fields"] = undefined;

/**
 * Allowed values for the <code>currency_code</code> property.
 * @enum {String}
 * @readonly
 */
PurchaseOrder["CurrencyCodeEnum"] = {
  /**
   * value: "AUD"
   * @const
   */
  AUD: "AUD",

  /**
   * value: "THB"
   * @const
   */
  THB: "THB",

  /**
   * value: "CAD"
   * @const
   */
  CAD: "CAD",

  /**
   * value: "CNY"
   * @const
   */
  CNY: "CNY",

  /**
   * value: "DKK"
   * @const
   */
  DKK: "DKK",

  /**
   * value: "AED"
   * @const
   */
  AED: "AED",

  /**
   * value: "USD"
   * @const
   */
  USD: "USD",

  /**
   * value: "EGP"
   * @const
   */
  EGP: "EGP",

  /**
   * value: "EUR"
   * @const
   */
  EUR: "EUR",

  /**
   * value: "HUF"
   * @const
   */
  HUF: "HUF",

  /**
   * value: "CHF"
   * @const
   */
  CHF: "CHF",

  /**
   * value: "HKD"
   * @const
   */
  HKD: "HKD",

  /**
   * value: "IDR"
   * @const
   */
  IDR: "IDR",

  /**
   * value: "ILS"
   * @const
   */
  ILS: "ILS",

  /**
   * value: "CZK"
   * @const
   */
  CZK: "CZK",

  /**
   * value: "ISK"
   * @const
   */
  ISK: "ISK",

  /**
   * value: "TRL"
   * @const
   */
  TRL: "TRL",

  /**
   * value: "MYR"
   * @const
   */
  MYR: "MYR",

  /**
   * value: "MXN"
   * @const
   */
  MXN: "MXN",

  /**
   * value: "NOK"
   * @const
   */
  NOK: "NOK",

  /**
   * value: "OMR"
   * @const
   */
  OMR: "OMR",

  /**
   * value: "PHP"
   * @const
   */
  PHP: "PHP",

  /**
   * value: "PLN"
   * @const
   */
  PLN: "PLN",

  /**
   * value: "GBP"
   * @const
   */
  GBP: "GBP",

  /**
   * value: "BWP"
   * @const
   */
  BWP: "BWP",

  /**
   * value: "QAR"
   * @const
   */
  QAR: "QAR",

  /**
   * value: "ZAR"
   * @const
   */
  ZAR: "ZAR",

  /**
   * value: "BRL"
   * @const
   */
  BRL: "BRL",

  /**
   * value: "RUB"
   * @const
   */
  RUB: "RUB",

  /**
   * value: "INR"
   * @const
   */
  INR: "INR",

  /**
   * value: "SAR"
   * @const
   */
  SAR: "SAR",

  /**
   * value: "SGD"
   * @const
   */
  SGD: "SGD",

  /**
   * value: "SEK"
   * @const
   */
  SEK: "SEK",

  /**
   * value: "TWD"
   * @const
   */
  TWD: "TWD",

  /**
   * value: "VND"
   * @const
   */
  VND: "VND",

  /**
   * value: "KRW"
   * @const
   */
  KRW: "KRW",

  /**
   * value: "JPY"
   * @const
   */
  JPY: "JPY",

  /**
   * value: "NZD"
   * @const
   */
  NZD: "NZD",

  /**
   * value: "JOD"
   * @const
   */
  JOD: "JOD"
};

export default PurchaseOrder;
