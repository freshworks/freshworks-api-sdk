/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The SurveyOption model module.
 * @module model/SurveyOption
 * @version 2.0.1
 */
class SurveyOption {
  /**
   * Constructs a new <code>SurveyOption</code>.
   * Response Options of the Customer Satisfaction Survey
   * @alias module:model/SurveyOption
   */
  constructor() {
    SurveyOption.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>SurveyOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SurveyOption} obj Optional instance to populate.
   * @return {module:model/SurveyOption} The populated <code>SurveyOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SurveyOption();

      if (data.hasOwnProperty("text")) {
        obj["text"] = ApiClient.convertToType(data["text"], "String");
      }
      if (data.hasOwnProperty("follow_up_question")) {
        obj["follow_up_question"] = ApiClient.convertToType(data["follow_up_question"], "String");
      }
    }
    return obj;
  }
}

/**
 * Option text that will be displayed to the requester. E.g. Fantastic, Neutral, Awful.
 * @member {String} text
 */
SurveyOption.prototype["text"] = undefined;

/**
 * Follow-up question that will asked when the requester responds with the current option.
 * @member {String} follow_up_question
 */
SurveyOption.prototype["follow_up_question"] = undefined;

export default SurveyOption;
