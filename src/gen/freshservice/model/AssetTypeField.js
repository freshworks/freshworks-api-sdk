/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import FieldChoices from "./FieldChoices";

/**
 * The AssetTypeField model module.
 * @module model/AssetTypeField
 * @version 1.0.0
 */
class AssetTypeField {
  /**
   * Constructs a new <code>AssetTypeField</code>.
   * @alias module:model/AssetTypeField
   */
  constructor() {
    AssetTypeField.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>AssetTypeField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AssetTypeField} obj Optional instance to populate.
   * @return {module:model/AssetTypeField} The populated <code>AssetTypeField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AssetTypeField();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("asset_type_id")) {
        obj["asset_type_id"] = ApiClient.convertToType(data["asset_type_id"], "Number");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("field_type")) {
        obj["field_type"] = ApiClient.convertToType(data["field_type"], "String");
      }
      if (data.hasOwnProperty("is_default_field")) {
        obj["is_default_field"] = ApiClient.convertToType(data["is_default_field"], "Boolean");
      }
      if (data.hasOwnProperty("required")) {
        obj["required"] = ApiClient.convertToType(data["required"], "Boolean");
      }
      if (data.hasOwnProperty("is_unique")) {
        obj["is_unique"] = ApiClient.convertToType(data["is_unique"], "Boolean");
      }
      if (data.hasOwnProperty("created_time")) {
        obj["created_time"] = ApiClient.convertToType(data["created_time"], "Date");
      }
      if (data.hasOwnProperty("updated_time")) {
        obj["updated_time"] = ApiClient.convertToType(data["updated_time"], "Date");
      }
      if (data.hasOwnProperty("field_choices")) {
        obj["field_choices"] = FieldChoices.constructFromObject(data["field_choices"]);
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the asset type field
 * @member {Number} id
 */
AssetTypeField.prototype["id"] = undefined;

/**
 * the asset type to which this field is belongs to (for example, Product belongs to Hardware asset type)
 * @member {Number} asset_type_id
 */
AssetTypeField.prototype["asset_type_id"] = undefined;

/**
 * Name of the asset type field
 * @member {String} name
 */
AssetTypeField.prototype["name"] = undefined;

/**
 * Label of the field as displayed on the user interface
 * @member {String} label
 */
AssetTypeField.prototype["label"] = undefined;

/**
 * The data type of the value that can be stored in the field
 * @member {String} field_type
 */
AssetTypeField.prototype["field_type"] = undefined;

/**
 * Indicates whether the field is a default field in Freshservice for the asset type of or a custom field
 * @member {Boolean} is_default_field
 */
AssetTypeField.prototype["is_default_field"] = undefined;

/**
 * Mandatoriness of this field when creating or updating an asset
 * @member {Boolean} required
 */
AssetTypeField.prototype["required"] = undefined;

/**
 * Indicates whether a field is unique in Freshservice. This is applicable only for Asset Display Name, Asset Tag and Serial Number fields.
 * @member {Boolean} is_unique
 */
AssetTypeField.prototype["is_unique"] = undefined;

/**
 * Timestamp at which the asset field was created
 * @member {Date} created_time
 */
AssetTypeField.prototype["created_time"] = undefined;

/**
 * Timestamp at which the asset field was last modified
 * @member {Date} updated_time
 */
AssetTypeField.prototype["updated_time"] = undefined;

/**
 * @member {module:model/FieldChoices} field_choices
 */
AssetTypeField.prototype["field_choices"] = undefined;

export default AssetTypeField;
