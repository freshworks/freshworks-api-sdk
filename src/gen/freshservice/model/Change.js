/**
 * Freshservice
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Asset from "./Asset";
import ChangeWindow from "./ChangeWindow";
import PlanningFields from "./PlanningFields";

/**
 * The Change model module.
 * @module model/Change
 * @version 2.0.1
 */
class Change {
  /**
   * Constructs a new <code>Change</code>.
   * @alias module:model/Change
   */
  constructor() {
    Change.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Change</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Change} obj Optional instance to populate.
   * @return {module:model/Change} The populated <code>Change</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Change();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("requester_id")) {
        obj["requester_id"] = ApiClient.convertToType(data["requester_id"], "Number");
      }
      if (data.hasOwnProperty("agent_id")) {
        obj["agent_id"] = ApiClient.convertToType(data["agent_id"], "Number");
      }
      if (data.hasOwnProperty("group_id")) {
        obj["group_id"] = ApiClient.convertToType(data["group_id"], "Number");
      }
      if (data.hasOwnProperty("priority")) {
        obj["priority"] = ApiClient.convertToType(data["priority"], "Number");
      }
      if (data.hasOwnProperty("impact")) {
        obj["impact"] = ApiClient.convertToType(data["impact"], "Number");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "Number");
      }
      if (data.hasOwnProperty("risk")) {
        obj["risk"] = ApiClient.convertToType(data["risk"], "Number");
      }
      if (data.hasOwnProperty("change_type")) {
        obj["change_type"] = ApiClient.convertToType(data["change_type"], "Number");
      }
      if (data.hasOwnProperty("approval_status")) {
        obj["approval_status"] = ApiClient.convertToType(data["approval_status"], "Number");
      }
      if (data.hasOwnProperty("subject")) {
        obj["subject"] = ApiClient.convertToType(data["subject"], "String");
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(data["description"], "String");
      }
      if (data.hasOwnProperty("description_text")) {
        obj["description_text"] = ApiClient.convertToType(data["description_text"], "String");
      }
      if (data.hasOwnProperty("planned_start_date")) {
        obj["planned_start_date"] = ApiClient.convertToType(data["planned_start_date"], "Date");
      }
      if (data.hasOwnProperty("planned_end_date")) {
        obj["planned_end_date"] = ApiClient.convertToType(data["planned_end_date"], "Date");
      }
      if (data.hasOwnProperty("project_id")) {
        obj["project_id"] = ApiClient.convertToType(data["project_id"], "Number");
      }
      if (data.hasOwnProperty("department_id")) {
        obj["department_id"] = ApiClient.convertToType(data["department_id"], "Number");
      }
      if (data.hasOwnProperty("category")) {
        obj["category"] = ApiClient.convertToType(data["category"], "String");
      }
      if (data.hasOwnProperty("sub_category")) {
        obj["sub_category"] = ApiClient.convertToType(data["sub_category"], "String");
      }
      if (data.hasOwnProperty("item_category")) {
        obj["item_category"] = ApiClient.convertToType(data["item_category"], "String");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("associated_release")) {
        obj["associated_release"] = ApiClient.convertToType(data["associated_release"], "Number");
      }
      if (data.hasOwnProperty("assets")) {
        obj["assets"] = ApiClient.convertToType(data["assets"], [Asset]);
      }
      if (data.hasOwnProperty("associated_problems")) {
        obj["associated_problems"] = ApiClient.convertToType(data["associated_problems"], ["Number"]);
      }
      if (data.hasOwnProperty("incidents_caused_by_change")) {
        obj["incidents_caused_by_change"] = ApiClient.convertToType(data["incidents_caused_by_change"], ["Number"]);
      }
      if (data.hasOwnProperty("tickets_initiating_change")) {
        obj["tickets_initiating_change"] = ApiClient.convertToType(data["tickets_initiating_change"], ["Number"]);
      }
      if (data.hasOwnProperty("associated_project")) {
        obj["associated_project"] = ApiClient.convertToType(data["associated_project"], "Number");
      }
      if (data.hasOwnProperty("custom_fields")) {
        obj["custom_fields"] = ApiClient.convertToType(data["custom_fields"], { String: "String" });
      }
      if (data.hasOwnProperty("planning_fields")) {
        obj["planning_fields"] = PlanningFields.constructFromObject(data["planning_fields"]);
      }
      if (data.hasOwnProperty("maintenance_window")) {
        obj["maintenance_window"] = ChangeWindow.constructFromObject(data["maintenance_window"]);
      }
      if (data.hasOwnProperty("black_out_window")) {
        obj["black_out_window"] = ChangeWindow.constructFromObject(data["black_out_window"]);
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the change
 * @member {Number} id
 */
Change.prototype["id"] = undefined;

/**
 * Unique identifier of the initiator of the change
 * @member {Number} requester_id
 */
Change.prototype["requester_id"] = undefined;

/**
 * Unique identifier of the agent to whom the change is assigned
 * @member {Number} agent_id
 */
Change.prototype["agent_id"] = undefined;

/**
 * Unique identifier of the agent group to which the change is assigned
 * @member {Number} group_id
 */
Change.prototype["group_id"] = undefined;

/**
 * Priority of the change 1-Low, 2-Medium, 3-High, 4-Urgent
 * @member {Number} priority
 */
Change.prototype["priority"] = undefined;

/**
 * Impact of the change 1-Low, 2-Medium, 3-High
 * @member {Number} impact
 */
Change.prototype["impact"] = undefined;

/**
 * Status identifier of the change. Open -> 1, Planning -> 2, Approval -> 3, Pending Release -> 4, Pending Review -> 5, closed -> 6
 * @member {Number} status
 */
Change.prototype["status"] = undefined;

/**
 * Risk of the change 1-Low, 2-Medium, 3-High, 4-Very High
 * @member {Number} risk
 */
Change.prototype["risk"] = undefined;

/**
 * Type of the change 1-minor, 2-standard, 3-major, 4-emergency
 * @member {Number} change_type
 */
Change.prototype["change_type"] = undefined;

/**
 * Approval status of the change 1-Requested, 2-Approved, 3-Rejected 4-Not_Requested
 * @member {Number} approval_status
 */
Change.prototype["approval_status"] = undefined;

/**
 * Subject of the change
 * @member {String} subject
 */
Change.prototype["subject"] = undefined;

/**
 * Short description of the change in HTML format
 * @member {String} description
 */
Change.prototype["description"] = undefined;

/**
 * Short description of the change in plain text format
 * @member {String} description_text
 */
Change.prototype["description_text"] = undefined;

/**
 * Timestamp at which change is starting
 * @member {Date} planned_start_date
 */
Change.prototype["planned_start_date"] = undefined;

/**
 * Timestamp at which change is ending
 * @member {Date} planned_end_date
 */
Change.prototype["planned_end_date"] = undefined;

/**
 * Unique ID of the associated project
 * @member {Number} project_id
 */
Change.prototype["project_id"] = undefined;

/**
 * Unique ID of the department initiating the change
 * @member {Number} department_id
 */
Change.prototype["department_id"] = undefined;

/**
 * Category of the change
 * @member {String} category
 */
Change.prototype["category"] = undefined;

/**
 * Sub-category of the change
 * @member {String} sub_category
 */
Change.prototype["sub_category"] = undefined;

/**
 * Item of the change
 * @member {String} item_category
 */
Change.prototype["item_category"] = undefined;

/**
 * Timestamp at which change was created
 * @member {Date} created_at
 */
Change.prototype["created_at"] = undefined;

/**
 * Timestamp at which change was last updated
 * @member {Date} updated_at
 */
Change.prototype["updated_at"] = undefined;

/**
 * Unique ID of the associated release
 * @member {Number} associated_release
 */
Change.prototype["associated_release"] = undefined;

/**
 * Assets associated with the Ticket
 * @member {Array.<module:model/Asset>} assets
 */
Change.prototype["assets"] = undefined;

/**
 * Unique IDs of the problems associated with the change request
 * @member {Array.<Number>} associated_problems
 */
Change.prototype["associated_problems"] = undefined;

/**
 * Unique IDs of the incidents caused by this change request
 * @member {Array.<Number>} incidents_caused_by_change
 */
Change.prototype["incidents_caused_by_change"] = undefined;

/**
 * Unique IDs of the tickets initiating this change request
 * @member {Array.<Number>} tickets_initiating_change
 */
Change.prototype["tickets_initiating_change"] = undefined;

/**
 * Id of the associated release
 * @member {Number} associated_project
 */
Change.prototype["associated_project"] = undefined;

/**
 * Key value pairs containing the names and values of custom fields
 * @member {Object.<String, String>} custom_fields
 */
Change.prototype["custom_fields"] = undefined;

/**
 * @member {module:model/PlanningFields} planning_fields
 */
Change.prototype["planning_fields"] = undefined;

/**
 * @member {module:model/ChangeWindow} maintenance_window
 */
Change.prototype["maintenance_window"] = undefined;

/**
 * @member {module:model/ChangeWindow} black_out_window
 */
Change.prototype["black_out_window"] = undefined;

export default Change;
