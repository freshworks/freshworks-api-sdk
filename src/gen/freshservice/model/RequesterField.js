/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import FieldChoices from "./FieldChoices";

/**
 * The RequesterField model module.
 * @module model/RequesterField
 * @version 1.0.0
 */
class RequesterField {
  /**
   * Constructs a new <code>RequesterField</code>.
   * @alias module:model/RequesterField
   */
  constructor() {
    RequesterField.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>RequesterField</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RequesterField} obj Optional instance to populate.
   * @return {module:model/RequesterField} The populated <code>RequesterField</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RequesterField();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("editable_in_signup")) {
        obj["editable_in_signup"] = ApiClient.convertToType(data["editable_in_signup"], "Boolean");
      }
      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("name")) {
        obj["name"] = ApiClient.convertToType(data["name"], "String");
      }
      if (data.hasOwnProperty("position")) {
        obj["position"] = ApiClient.convertToType(data["position"], "Number");
      }
      if (data.hasOwnProperty("type")) {
        obj["type"] = ApiClient.convertToType(data["type"], "String");
      }
      if (data.hasOwnProperty("requesters_can_edit")) {
        obj["requesters_can_edit"] = ApiClient.convertToType(data["requesters_can_edit"], "Boolean");
      }
      if (data.hasOwnProperty("label_for_requesters")) {
        obj["label_for_requesters"] = ApiClient.convertToType(data["label_for_requesters"], "String");
      }
      if (data.hasOwnProperty("required_for_requesters")) {
        obj["required_for_requesters"] = ApiClient.convertToType(data["required_for_requesters"], "Boolean");
      }
      if (data.hasOwnProperty("displayed_for_requesters")) {
        obj["displayed_for_requesters"] = ApiClient.convertToType(data["displayed_for_requesters"], "Boolean");
      }
      if (data.hasOwnProperty("required_for_agents")) {
        obj["required_for_agents"] = ApiClient.convertToType(data["required_for_agents"], "Boolean");
      }
      if (data.hasOwnProperty("choices")) {
        obj["choices"] = FieldChoices.constructFromObject(data["choices"]);
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
    }
    return obj;
  }
}

/**
 * Unique identifier of the requester field
 * @member {Number} id
 */
RequesterField.prototype["id"] = undefined;

/**
 * Signifies whether the requester can provide a value for the field while signing up.
 * @member {Boolean} editable_in_signup
 */
RequesterField.prototype["editable_in_signup"] = undefined;

/**
 * Field label shown to agents and admins when editing a requester's profile
 * @member {String} label
 */
RequesterField.prototype["label"] = undefined;

/**
 * Name of the requester field
 * @member {String} name
 */
RequesterField.prototype["name"] = undefined;

/**
 * Relative display position of the requester field
 * @member {Number} position
 */
RequesterField.prototype["position"] = undefined;

/**
 * For custom fields, this signifies the type of value associated with the field (custom_date, custom_text)
 * @member {String} type
 */
RequesterField.prototype["type"] = undefined;

/**
 * Signifies whether the requester can modify the value for the field while editing their profile
 * @member {Boolean} requesters_can_edit
 */
RequesterField.prototype["requesters_can_edit"] = undefined;

/**
 * Field label shown to requesters when viewing their own profile
 * @member {String} label_for_requesters
 */
RequesterField.prototype["label_for_requesters"] = undefined;

/**
 * Signifies whether the field is mandatory for requesters to complete during sign up or while editing their own profile
 * @member {Boolean} required_for_requesters
 */
RequesterField.prototype["required_for_requesters"] = undefined;

/**
 * Signifies whether the field is visible to requesters while editing their own profile
 * @member {Boolean} displayed_for_requesters
 */
RequesterField.prototype["displayed_for_requesters"] = undefined;

/**
 * Signifies whether the field is mandatory for agents to complete when they create or modify a requester's profile
 * @member {Boolean} required_for_agents
 */
RequesterField.prototype["required_for_agents"] = undefined;

/**
 * @member {module:model/FieldChoices} choices
 */
RequesterField.prototype["choices"] = undefined;

/**
 * Timestamp at which the department was created
 * @member {Date} created_at
 */
RequesterField.prototype["created_at"] = undefined;

/**
 * Timestamp at which the department was last modified
 * @member {Date} updated_at
 */
RequesterField.prototype["updated_at"] = undefined;

export default RequesterField;
