/**
 * Freshservice APIs
 * Public REST APIs for Freshservice
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: mithun.mohandas@freshworks.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The ServiceRequest model module.
 * @module model/ServiceRequest
 * @version 1.0.0
 */
class ServiceRequest {
  /**
   * Constructs a new <code>ServiceRequest</code>.
   * @alias module:model/ServiceRequest
   * @param id {Number} the id of the item that needs to requested
   * @param requester_email {String} the email id of the requester
   */
  constructor(id, requester_email) {
    ServiceRequest.initialize(this, id, requester_email);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, id, requester_email) {
    obj["id"] = id;
    obj["requester_email"] = requester_email;
  }

  /**
   * Constructs a <code>ServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ServiceRequest} obj Optional instance to populate.
   * @return {module:model/ServiceRequest} The populated <code>ServiceRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ServiceRequest();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("quantity")) {
        obj["quantity"] = ApiClient.convertToType(data["quantity"], "Number");
      }
      if (data.hasOwnProperty("requester_email")) {
        obj["requester_email"] = ApiClient.convertToType(data["requester_email"], "String");
      }
      if (data.hasOwnProperty("requested_for_email")) {
        obj["requested_for_email"] = ApiClient.convertToType(data["requested_for_email"], "String");
      }
      if (data.hasOwnProperty("custom_fields")) {
        obj["custom_fields"] = ApiClient.convertToType(data["custom_fields"], Object);
      }
    }
    return obj;
  }
}

/**
 * the id of the item that needs to requested
 * @member {Number} id
 */
ServiceRequest.prototype["id"] = undefined;

/**
 * The number of units of the item needed by the requester. By default it is 1.
 * @member {Number} quantity
 */
ServiceRequest.prototype["quantity"] = undefined;

/**
 * the email id of the requester
 * @member {String} requester_email
 */
ServiceRequest.prototype["requester_email"] = undefined;

/**
 * the email id of the user for whom this is requested.
 * @member {String} requested_for_email
 */
ServiceRequest.prototype["requested_for_email"] = undefined;

/**
 * Custom fields that are associated with a Freshservice entity
 * @member {Object} custom_fields
 */
ServiceRequest.prototype["custom_fields"] = undefined;

export default ServiceRequest;
