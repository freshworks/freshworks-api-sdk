/**
 * Freshteam Public APIs
 * Freshteam public APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freshteam.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";

/**
 * The InlineObject2 model module.
 * @module model/InlineObject2
 * @version 1.0.0
 */
class InlineObject2 {
  /**
   * Constructs a new <code>InlineObject2</code>.
   * @alias module:model/InlineObject2
   * @param label {String}
   * @param sectionName {String}
   * @param fieldType {module:model/InlineObject2.FieldTypeEnum}
   */
  constructor(label, sectionName, fieldType) {
    InlineObject2.initialize(this, label, sectionName, fieldType);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, label, sectionName, fieldType) {
    obj["label"] = label;
    obj["section_name"] = sectionName;
    obj["field_type"] = fieldType;
  }

  /**
   * Constructs a <code>InlineObject2</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineObject2} obj Optional instance to populate.
   * @return {module:model/InlineObject2} The populated <code>InlineObject2</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new InlineObject2();

      if (data.hasOwnProperty("label")) {
        obj["label"] = ApiClient.convertToType(data["label"], "String");
      }
      if (data.hasOwnProperty("required")) {
        obj["required"] = ApiClient.convertToType(data["required"], "Boolean");
      }
      if (data.hasOwnProperty("section_name")) {
        obj["section_name"] = ApiClient.convertToType(data["section_name"], "String");
      }
      if (data.hasOwnProperty("field_type")) {
        obj["field_type"] = ApiClient.convertToType(data["field_type"], "String");
      }
    }
    return obj;
  }
}

/**
 * @member {String} label
 */
InlineObject2.prototype["label"] = undefined;

/**
 * @member {Boolean} required
 */
InlineObject2.prototype["required"] = undefined;

/**
 * @member {String} section_name
 */
InlineObject2.prototype["section_name"] = undefined;

/**
 * @member {module:model/InlineObject2.FieldTypeEnum} field_type
 */
InlineObject2.prototype["field_type"] = undefined;

/**
 * Allowed values for the <code>field_type</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject2["FieldTypeEnum"] = {
  /**
   * value: "text"
   * @const
   */
  text: "text",

  /**
   * value: "number"
   * @const
   */
  number: "number"
};

export default InlineObject2;
