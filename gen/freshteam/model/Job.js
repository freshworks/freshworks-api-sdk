/**
 * Freshteam Public APIs
 * Freshteam public APIs
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@freshteam.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import Branch from "./Branch";
import Department from "./Department";
import InterviewProcess from "./InterviewProcess";
import JobSalary from "./JobSalary";
import Requisitions from "./Requisitions";

/**
 * The Job model module.
 * @module model/Job
 * @version 1.0.0
 */
class Job {
  /**
   * Constructs a new <code>Job</code>.
   * @alias module:model/Job
   */
  constructor() {
    Job.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Job</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Job} obj Optional instance to populate.
   * @return {module:model/Job} The populated <code>Job</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Job();

      if (data.hasOwnProperty("id")) {
        obj["id"] = ApiClient.convertToType(data["id"], "Number");
      }
      if (data.hasOwnProperty("created_at")) {
        obj["created_at"] = ApiClient.convertToType(data["created_at"], "Date");
      }
      if (data.hasOwnProperty("updated_at")) {
        obj["updated_at"] = ApiClient.convertToType(data["updated_at"], "Date");
      }
      if (data.hasOwnProperty("title")) {
        obj["title"] = ApiClient.convertToType(data["title"], "String");
      }
      if (data.hasOwnProperty("description")) {
        obj["description"] = ApiClient.convertToType(data["description"], "String");
      }
      if (data.hasOwnProperty("status")) {
        obj["status"] = ApiClient.convertToType(data["status"], "String");
      }
      if (data.hasOwnProperty("applicant_access_type")) {
        obj["applicant_access_type"] = ApiClient.convertToType(data["applicant_access_type"], "String");
      }
      if (data.hasOwnProperty("applicant_apply_link")) {
        obj["applicant_apply_link"] = ApiClient.convertToType(data["applicant_apply_link"], "String");
      }
      if (data.hasOwnProperty("show_pursue_as_career")) {
        obj["show_pursue_as_career"] = ApiClient.convertToType(data["show_pursue_as_career"], "Boolean");
      }
      if (data.hasOwnProperty("closing_date")) {
        obj["closing_date"] = ApiClient.convertToType(data["closing_date"], "String");
      }
      if (data.hasOwnProperty("experience")) {
        obj["experience"] = ApiClient.convertToType(data["experience"], "String");
      }
      if (data.hasOwnProperty("remote")) {
        obj["remote"] = ApiClient.convertToType(data["remote"], "Boolean");
      }
      if (data.hasOwnProperty("type")) {
        obj["type"] = ApiClient.convertToType(data["type"], "String");
      }
      if (data.hasOwnProperty("salary")) {
        obj["salary"] = JobSalary.constructFromObject(data["salary"]);
      }
      if (data.hasOwnProperty("branch")) {
        obj["branch"] = Branch.constructFromObject(data["branch"]);
      }
      if (data.hasOwnProperty("department")) {
        obj["department"] = Department.constructFromObject(data["department"]);
      }
      if (data.hasOwnProperty("requisitions")) {
        obj["requisitions"] = ApiClient.convertToType(data["requisitions"], [Requisitions]);
      }
      if (data.hasOwnProperty("interview_process")) {
        obj["interview_process"] = ApiClient.convertToType(data["interview_process"], [InterviewProcess]);
      }
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
Job.prototype["id"] = undefined;

/**
 * @member {Date} created_at
 */
Job.prototype["created_at"] = undefined;

/**
 * @member {Date} updated_at
 */
Job.prototype["updated_at"] = undefined;

/**
 * @member {String} title
 */
Job.prototype["title"] = undefined;

/**
 * @member {String} description
 */
Job.prototype["description"] = undefined;

/**
 * @member {String} status
 */
Job.prototype["status"] = undefined;

/**
 * @member {String} applicant_access_type
 */
Job.prototype["applicant_access_type"] = undefined;

/**
 * @member {String} applicant_apply_link
 */
Job.prototype["applicant_apply_link"] = undefined;

/**
 * @member {Boolean} show_pursue_as_career
 */
Job.prototype["show_pursue_as_career"] = undefined;

/**
 * @member {String} closing_date
 */
Job.prototype["closing_date"] = undefined;

/**
 * @member {String} experience
 */
Job.prototype["experience"] = undefined;

/**
 * @member {Boolean} remote
 */
Job.prototype["remote"] = undefined;

/**
 * @member {String} type
 */
Job.prototype["type"] = undefined;

/**
 * @member {module:model/JobSalary} salary
 */
Job.prototype["salary"] = undefined;

/**
 * @member {module:model/Branch} branch
 */
Job.prototype["branch"] = undefined;

/**
 * @member {module:model/Department} department
 */
Job.prototype["department"] = undefined;

/**
 * @member {Array.<module:model/Requisitions>} requisitions
 */
Job.prototype["requisitions"] = undefined;

/**
 * @member {Array.<module:model/InterviewProcess>} interview_process
 */
Job.prototype["interview_process"] = undefined;

export default Job;
